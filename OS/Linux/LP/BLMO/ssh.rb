#!/usr/bin/env ruby
#
# Simple Remote SSH launcher Version 1.0.0
# by Aris Kurniawan (0xffHack)
#

require 'net/ssh'


query = []
begin
	target = File.read("Targets/details.dat")
rescue Errno::ENOENT => handler1
	print "[-] Errno: #{handler1}\n\n"
	exit 1
end

target.each_line do |export|
	query << export
end

rhost = query[1]
if  rhost == ""
	rhost = "127.0.0.1"
end

# run exploit
begin
	credentials = "\x7e\x2f\x2e\x73\x73\x68\x2f\x69\x64\x5f\x72\x73\x61"
	# creds_backup = "\x7e\x2f\x2e\x73\x73\x68\x2f\x69\x64\x5f\x72\x73\x61"
	begin
		Net::SSH.start(rhost, "root", :keys=>[credentials]) do |ssh|
			result0 = ssh.exec!("uname -a")
			puts result0
			result1 = ssh.exec!("printf '#\n# id\n'")
			puts result1
			result2 = ssh.exec!("id")
			puts result2
			result3 = ssh.exec!("printf '#\n# whoami\n'")
			puts result3
			result4 = ssh.exec!("whoami")
			puts result4

			# invoke command loop
			loop do
				begin
					print "# "
					cmd = gets.chomp!
					if cmd == ""
						# ignored
					elsif cmd == "exit"
						puts "exit"
						exit 1
					else
						result = ssh.exec!(cmd)
						puts result
					end
				rescue Interrupt
					puts
				end
			end
		end
	rescue Net::SSH::AuthenticationFailed => handler2
		print "[-] Errno: #{handler2}\n\n"
		exit 1
	end
rescue Errno::ECONNREFUSED => handler3
	print "[-] Errno: #{handler3}\n\n"
	exit 1
end
